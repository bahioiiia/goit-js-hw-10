{"version":3,"file":"2-snackbar-9c1a8129.js","sources":["../../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const delay = parseInt(document.querySelector('input[name=\"delay\"]').value);\n  const state = document.querySelector('input[name=\"state\"]:checked').value;\n\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  })\n    .then(delay => {\n      iziToast.success({\n        title: 'Success',\n        message: `✅ Fulfilled promise in ${delay} ms`,\n      });\n    })\n    .catch(delay => {\n      iziToast.error({\n        title: 'Error',\n        message: `❌ Rejected promise in ${delay} ms`,\n      });\n    });\n});\n\n/* <!-- Напиши скрипт, який після сабміту форми створює проміс.\nВ середині колбека цього промісу через вказану користувачем кількість мілісекунд проміс має виконуватися (при fulfilled) або відхилятися (при rejected),\nзалежно від обраної опції в радіокнопках. Значенням промісу, яке передається як аргумент у методи resolve/reject, має бути значення затримки в мілісекундах.\n\nСтворений проміс треба опрацювати у відповідних для вдалого/невдалого виконання методах.\n\nЯкщо проміс виконується вдало, виводь у консоль наступний рядок, де delay — це значення затримки виклику промісу в мілісекундах.\n\n\n\n`✅ Fulfilled promise in ${delay}ms`\n\n\n\nЯкщо проміс буде відхилено, то виводь у консоль наступний рядок, де delay — це значення затримки промісу в мілісекундах.\n\n`❌ Rejected promise in ${delay}ms`\n\n\n\nБібліотека повідомлень\n\n\n\nДля відображення повідомлень, замість console.log(), використовуй бібліотеку iziToast. Для того щоб підключити CSS код бібліотеки в проєкт,\nнеобхідно додати ще один імпорт, крім того, що описаний у документації.\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\nНа що буде звертати увагу ментор при перевірці:\n\nПідключена бібліотека iziToast.\nПри обранні стану в радіокнопках і натисканні на кнопку Create notification з’являється повідомлення,\nвідповідного до обраного стану стилю, із затримкою в кількість мілісекунд, переданих в інпут.\nПовідомлення, що виводиться, містить тип обраного стейту і кількість мілісекунд згідно з шаблоном в умові. -->\n */"],"names":["event","delay","state","resolve","reject","iziToast"],"mappings":"yCAGA,SAAS,cAAc,OAAO,EAAE,iBAAiB,SAAU,SAAUA,EAAO,CAC1EA,EAAM,eAAc,EAEpB,MAAMC,EAAQ,SAAS,SAAS,cAAc,qBAAqB,EAAE,KAAK,EACpEC,EAAQ,SAAS,cAAc,6BAA6B,EAAE,MAEpE,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/B,WAAW,IAAM,CACXF,IAAU,YACZC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EACE,KAAKA,GAAS,CACbI,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,0BAA0BJ,CAAK,KAChD,CAAO,CACP,CAAK,EACA,MAAMA,GAAS,CACdI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBJ,CAAK,KAC/C,CAAO,CACP,CAAK,CACL,CAAC"}